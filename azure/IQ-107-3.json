{
  "title": "VPC Flow Logs - Enabled + Storage Archived",
  "test_description": "Validate that NSG Flow Logs are enabled and properly archived to storage for compliance and monitoring requirements",
  "version": "1.0",
  "test_code": "IQ-107-3",
  "test_seq": 3,
  "test_suite": "IQ-107",
  "test_suite_title": "Network Configuration",
  "test_suite_type": "Network",
  "category": "IQ",
  "api_calls": [
    {
      "step": 1,
      "name": "get_workspace_managed_rg",
      "method": "GET",
      "api_url": "https://management.azure.com/subscriptions/${subscription_id}/resourceGroups/${resource_group}/providers/Microsoft.Databricks/workspaces/${workspace_name}?api-version=2024-05-01",
      "headers": {
        "Authorization": "Bearer ${azure_token}",
        "Content-Type": "application/json"
      },
      "payload": {},
      "post_processing": "function processStep(responseData, currentVariables) { const managedResourceGroup = responseData?.properties?.managedResourceGroupId; const effectiveResourceGroup = managedResourceGroup ? managedResourceGroup.split('/').pop() : currentVariables.resource_group; return { ...currentVariables, managed_resource_group: managedResourceGroup, effective_resource_group: effectiveResourceGroup }; }"
    },
    {
      "step": 2,
      "name": "query_nsg_flow_logs",
      "method": "POST", 
      "api_url": "https://management.azure.com/subscriptions/${subscription_id}/resourceGroups/NetworkWatcherRG/providers/Microsoft.Network/networkWatchers/${network_watcher_name}/queryFlowLogStatus?api-version=2022-09-01",
      "headers": {
        "Authorization": "Bearer ${azure_token}",
        "Content-Type": "application/json"
      },
      "payload": {
        "targetResourceId": "/subscriptions/${subscription_id}/resourceGroups/${effective_resource_group}/providers/Microsoft.Network/networkSecurityGroups/${nsg_name}"
      },
      "post_processing": "function processStep(responseData, currentVariables) { const properties = responseData?.properties || {}; const flowLogEnabled = properties.enabled || false; const storageId = properties.storageId || ''; const retentionPolicy = properties.retentionPolicy || {}; const retentionEnabled = retentionPolicy.enabled || false; const retentionDays = retentionPolicy.days || 0; return { ...currentVariables, flow_log_enabled: flowLogEnabled, storage_id: storageId, retention_enabled: retentionEnabled, retention_days: retentionDays, flow_log_properties: properties }; }"
    }
  ],
  "response_schema": null,
  "parser_code": "function aggregateResults(stepResults) { const workspaceStep = stepResults.get_workspace_managed_rg; const flowLogsStep = stepResults.query_nsg_flow_logs; const expected_result = 'VPC Flow Logs: Enabled + Storage Archived'; let actual_result = 'VPC Flow Logs: Not configured'; if (workspaceStep.error) { return { status: 'fail', message: 'Failed to get workspace managed resource group', code: 'WORKSPACE_RG_FAILED', test_id: 'IQ-107-3', title: 'VPC Flow Logs - Enabled + Storage Archived', expected_result, actual_result }; } if (flowLogsStep.error) { return { status: 'fail', message: 'Failed to query NSG flow logs', code: 'FLOW_LOGS_QUERY_FAILED', test_id: 'IQ-107-3', title: 'VPC Flow Logs - Enabled + Storage Archived', expected_result, actual_result }; } const flowLogEnabled = variables.flow_log_enabled || false; const storageId = variables.storage_id || ''; const retentionEnabled = variables.retention_enabled || false; const retentionDays = variables.retention_days || 0; const hasStorage = storageId && storageId.length > 0; const hasRetention = retentionEnabled && retentionDays > 0; const requiredRetentionDays = variables.iq_107_3_required_retention_days || 30; if (flowLogEnabled && hasStorage && hasRetention) { if (retentionDays >= requiredRetentionDays) { actual_result = `VPC Flow Logs: Enabled + Storage Archived (${retentionDays} days retention)`; return { status: 'pass', message: `NSG flow logs enabled, archived to storage, and retention policy configured for ${retentionDays} days. Monitoring requirements met.`, code: 'FLOW_LOGS_OK', test_id: 'IQ-107-3', title: 'VPC Flow Logs - Enabled + Storage Archived', expected_result, actual_result }; } else { actual_result = `VPC Flow Logs: Enabled + Storage Archived (${retentionDays} days retention, need ${requiredRetentionDays})`; return { status: 'fail', message: `NSG flow logs enabled and archived, but retention period (${retentionDays} days) is less than required (${requiredRetentionDays} days).`, code: 'INSUFFICIENT_RETENTION', test_id: 'IQ-107-3', title: 'VPC Flow Logs - Enabled + Storage Archived', expected_result, actual_result }; } } else if (flowLogEnabled && hasStorage) { actual_result = 'VPC Flow Logs: Enabled + Storage Archived (no retention policy)'; return { status: 'fail', message: 'NSG flow logs enabled and archived, but no retention policy configured.', code: 'NO_RETENTION_POLICY', test_id: 'IQ-107-3', title: 'VPC Flow Logs - Enabled + Storage Archived', expected_result, actual_result }; } else if (flowLogEnabled) { actual_result = 'VPC Flow Logs: Enabled (no storage)'; return { status: 'fail', message: 'NSG flow logs enabled but not archived to storage account.', code: 'NO_STORAGE_ARCHIVAL', test_id: 'IQ-107-3', title: 'VPC Flow Logs - Enabled + Storage Archived', expected_result, actual_result }; } else { actual_result = 'VPC Flow Logs: Not enabled'; return { status: 'fail', message: 'NSG flow logs not enabled. Network monitoring and compliance requirements not met.', code: 'FLOW_LOGS_DISABLED', test_id: 'IQ-107-3', title: 'VPC Flow Logs - Enabled + Storage Archived', expected_result, actual_result }; } }"
} 