{
  "title": "Authorization Listing - Positive",
  "test_description": "Authorization Listing - Positive: Grant USE CATALOG, BROWSE, and USE SCHEMA permissions to TEMP_GROUP_OQ104 and verify user2 can list tables in the schema.",
  "version": "1.0",
  "test_code": "OQ-105-3",
  "test_seq": 3,
  "test_suite": "OQ-105",
  "test_suite_title": "Data Governance",
  "category": "OQ",
  "api_calls": [
    {
      "step": 1,
      "name": "grant_catalog_permissions",
      "method": "POST",
      "api_url": "${workspace_url}/api/2.0/sql/statements",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "payload": {
        "statement": "GRANT USE CATALOG, BROWSE ON CATALOG ${catalog_name} TO TEMP_GROUP_OQ104",
        "warehouse_id": "${warehouse_id}",
        "wait_timeout": "30s"
      },
      "post_processing": "async function processStep(responseData, currentVariables) { await delay(15000); logger.debug('Waited 15s after granting catalog permissions'); return currentVariables; }"
    },
    {
      "step": 2,
      "name": "grant_schema_permissions",
      "method": "POST",
      "api_url": "${workspace_url}/api/2.0/sql/statements",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "payload": {
        "statement": "GRANT USE SCHEMA ON SCHEMA ${catalog_name}.silver TO TEMP_GROUP_OQ104",
        "warehouse_id": "${warehouse_id}",
        "wait_timeout": "30s"
      },
      "post_processing": "async function processStep(responseData, currentVariables) { await delay(15000); logger.debug('Waited 15s after granting schema permissions'); return currentVariables; }"
    },
    {
      "step": 3,
      "name": "test_list_tables",
      "method": "POST",
      "api_url": "${workspace_url}/api/2.0/sql/statements",
      "headers": {
        "Authorization": "Bearer ${token2}",
        "Content-Type": "application/json"
      },
      "payload": {
        "statement": "SHOW TABLES IN ${catalog_name}.silver",
        "warehouse_id": "${warehouse_id}",
        "wait_timeout": "30s"
      },
      "post_processing": "function processStep(responseData, currentVariables) { return currentVariables; }"
    }
  ],
  "response_schema": null,
  "parser_code": "function aggregateResults(stepResults) { const grantCatalogStep = stepResults.grant_catalog_permissions; const grantSchemaStep = stepResults.grant_schema_permissions; const listTablesStep = stepResults.test_list_tables; const expected_result = 'Result: Listing Succeeded for granted objects'; let actual_result = ''; if (!grantCatalogStep || !grantCatalogStep.data || grantCatalogStep.data.status.state !== 'SUCCEEDED') { let errorMsg = 'Unknown error'; if (grantCatalogStep && grantCatalogStep.data && grantCatalogStep.data.status && grantCatalogStep.data.status.error) { errorMsg = grantCatalogStep.data.status.error.message || grantCatalogStep.data.status.error; } actual_result = 'Failed to grant USE CATALOG and BROWSE permissions: ' + errorMsg; return { status: 'fail', message: actual_result, code: 'GRANT_CATALOG_FAILED', test_id: 'OQ-105-3', title: 'Authorization Listing - Positive', expected_result, actual_result }; } if (!grantSchemaStep || !grantSchemaStep.data || grantSchemaStep.data.status.state !== 'SUCCEEDED') { let errorMsg = 'Unknown error'; if (grantSchemaStep && grantSchemaStep.data && grantSchemaStep.data.status && grantSchemaStep.data.status.error) { errorMsg = grantSchemaStep.data.status.error.message || grantSchemaStep.data.status.error; } actual_result = 'Failed to grant USE SCHEMA permission: ' + errorMsg; return { status: 'fail', message: actual_result, code: 'GRANT_SCHEMA_FAILED', test_id: 'OQ-105-3', title: 'Authorization Listing - Positive', expected_result, actual_result }; } if (!listTablesStep || !listTablesStep.data || listTablesStep.data.status.state !== 'SUCCEEDED') { actual_result = 'User2 cannot list tables in the schema.'; return { status: 'fail', message: 'Authorization validation failed: User2 cannot list tables in the schema', code: 'AUTH_LISTING_FAILED', test_id: 'OQ-105-3', title: 'Authorization Listing - Positive', expected_result, actual_result }; } let tableCount = 0; let tables = []; if (listTablesStep.data && listTablesStep.data.result && listTablesStep.data.result.data_array) { const dataArray = listTablesStep.data.result.data_array; tableCount = dataArray.length; tables = dataArray.map(function(row) { return row[1] || ''; }); } actual_result = 'User2 can list ' + tableCount + ' tables in the schema: ' + tables.join(', '); return { status: 'pass', message: 'Authorization validation passed: User2 can list ' + tableCount + ' tables in the schema', code: 'AUTH_LISTING_PASSED', test_id: 'OQ-105-3', title: 'Authorization Listing - Positive', expected_result, actual_result }; }",
  "manual_procedure": "Grant USE CATALOG, BROWSE, and USE SCHEMA to group TEMP_<ORG>_OQ104 and verify user can list tables in the schema."
} 