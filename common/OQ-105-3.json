{
  "title": "Authorization Listing - Positive",
  "test_description": "Authorization Listing - Positive: Grant catalog and schema permissions to TEMP_GROUP_OQ105 and verify user2 can list tables.",
  "version": "2.3",
  "test_code": "OQ-105-3",
  "test_seq": 3,
  "test_suite": "OQ-105",
  "test_suite_title": "Data Governance",
  "category": "OQ",
  "api_calls": [
    {
      "step": 1,
      "name": "get_user2_info",
      "method": "GET",
      "api_url": "${workspace_url}/api/2.0/preview/scim/v2/Me",
      "headers": {
        "Authorization": "Bearer ${token2}",
        "Content-Type": "application/json"
      },
      "payload": {},
      "post_processing": "function processStep(responseData, currentVariables) { const user2Name = responseData.userName || 'test-user'; const user2Id = responseData.id || null; return { ...currentVariables, user2_name: user2Name, user2_id: user2Id }; }"
    },
    {
      "step": 2,
      "name": "get_group_id",
      "method": "GET",
      "api_url": "${workspace_url}/api/2.0/account/scim/v2/Groups",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "payload": {
        "filter": "displayName eq \"TEMP_GROUP_OQ105\""
      },
      "post_processing": "function processStep(responseData, currentVariables) { const resources = responseData.Resources || []; const groupId = resources.length > 0 ? resources[0].id : null; return { ...currentVariables, group_id: groupId }; }"
    },
    {
      "step": 3,
      "name": "add_user_to_group",
      "method": "PATCH",
      "api_url": "${workspace_url}/api/2.0/account/scim/v2/Groups/${group_id}",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "payload": {
        "schemas": [
          "urn:ietf:params:scim:api:messages:2.0:PatchOp"
        ],
        "Operations": [
          {
            "op": "add",
            "value": {
              "members": [
                {
                  "value": "${user2_id}"
                }
              ]
            }
          }
        ]
      },
      "post_processing": "async function processStep(responseData, currentVariables) { const success = responseData && responseData.id; if (success) { await delay(10000); } return { ...currentVariables, add_user_success: success }; }"
    },
    {
      "step": 4,
      "name": "grant_catalog_permissions",
      "method": "POST",
      "api_url": "${workspace_url}/api/2.0/sql/statements",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "payload": {
        "statement": "GRANT USE CATALOG ON CATALOG ${catalog_name} TO TEMP_GROUP_OQ105",
        "warehouse_id": "${warehouse_id}"
      },
      "post_processing": "async function processStep(responseData, currentVariables) { const success = responseData?.status?.state === 'SUCCEEDED'; if (success) { await delay(5000); } return { ...currentVariables, catalog_grant_success: success }; }"
    },
    {
      "step": 5,
      "name": "grant_schema_permissions",
      "method": "POST",
      "api_url": "${workspace_url}/api/2.0/sql/statements",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "payload": {
        "statement": "GRANT USE SCHEMA ON SCHEMA ${catalog_name}.silver TO TEMP_GROUP_OQ105",
        "warehouse_id": "${warehouse_id}"
      },
      "post_processing": "async function processStep(responseData, currentVariables) { const success = responseData?.status?.state === 'SUCCEEDED'; if (success) { await delay(5000); } return { ...currentVariables, schema_grant_success: success }; }"
    },
    {
      "step": 6,
      "name": "test_list_tables",
      "method": "POST",
      "api_url": "${workspace_url}/api/2.0/sql/statements",
      "headers": {
        "Authorization": "Bearer ${token2}",
        "Content-Type": "application/json"
      },
      "payload": {
        "statement": "SHOW TABLES IN ${catalog_name}.silver",
        "warehouse_id": "${warehouse_id}"
      },
      "post_processing": "function processStep(responseData, currentVariables) { const success = responseData?.status?.state === 'SUCCEEDED'; const tableCount = responseData?.result?.data_array?.length || 0; return { ...currentVariables, list_success: success, table_count: tableCount }; }"
    }
  ],
  "response_schema": null,
  "parser_code": "function aggregateResults(stepResults) { const userStep = stepResults.get_user2_info; const groupStep = stepResults.get_group_id; const addUserStep = stepResults.add_user_to_group; const catalogStep = stepResults.grant_catalog_permissions; const schemaStep = stepResults.grant_schema_permissions; const listStep = stepResults.test_list_tables; const expected_result = 'Result: User2 can list tables in schema'; let actual_result = 'Authorization test not completed'; if (!userStep || !userStep.data || !userStep.data.userName) { actual_result = 'Failed to get user2 information.'; return { status: 'fail', message: actual_result, code: 'GET_USER_FAILED', test_id: 'OQ-105-3', title: 'Authorization Listing - Positive', expected_result, actual_result }; } if (!groupStep || !groupStep.data || !variables.group_id) { actual_result = 'Failed to get group ID for TEMP_GROUP_OQ105.'; return { status: 'fail', message: actual_result, code: 'GET_GROUP_FAILED', test_id: 'OQ-105-3', title: 'Authorization Listing - Positive', expected_result, actual_result }; } if (!addUserStep || !addUserStep.data || !variables.add_user_success) { actual_result = 'Failed to add user2 to group TEMP_GROUP_OQ105.'; return { status: 'fail', message: actual_result, code: 'ADD_USER_FAILED', test_id: 'OQ-105-3', title: 'Authorization Listing - Positive', expected_result, actual_result }; } if (!catalogStep || !catalogStep.data || !variables.catalog_grant_success) { actual_result = 'Failed to grant catalog permissions to TEMP_GROUP_OQ105.'; return { status: 'fail', message: actual_result, code: 'CATALOG_GRANT_FAILED', test_id: 'OQ-105-3', title: 'Authorization Listing - Positive', expected_result, actual_result }; } if (!schemaStep || !schemaStep.data || !variables.schema_grant_success) { actual_result = 'Failed to grant schema permissions to TEMP_GROUP_OQ105.'; return { status: 'fail', message: actual_result, code: 'SCHEMA_GRANT_FAILED', test_id: 'OQ-105-3', title: 'Authorization Listing - Positive', expected_result, actual_result }; } if (!listStep || !listStep.data || !variables.list_success) { actual_result = 'Failed to list tables in schema.'; return { status: 'fail', message: actual_result, code: 'LIST_TABLES_FAILED', test_id: 'OQ-105-3', title: 'Authorization Listing - Positive', expected_result, actual_result }; } const tableCount = variables.table_count || 0; actual_result = 'User2 can list ' + tableCount + ' tables in schema.'; return { status: 'pass', message: 'Authorization validation passed: User2 can list tables in ' + variables.catalog_name + '.silver schema', code: 'AUTH_LISTING_POSITIVE_PASSED', test_id: 'OQ-105-3', title: 'Authorization Listing - Positive', expected_result, actual_result }; }",
  "manual_procedure": "Get user2 info, get group ID for TEMP_GROUP_OQ105, add user2 to group, grant catalog and schema permissions to group, and verify user2 can list tables in the schema."
} 