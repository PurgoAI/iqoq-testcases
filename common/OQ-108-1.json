{
  "title": "Notebook Sharing RBAC Validation",
  "test_description": "Validates that notebook sharing RBAC is properly enforced by checking permissions on a specific notebook and ensuring proper access controls are in place",
  "version": "1.0",
  "test_code": "OQ-108-1",
  "manual_procedure": "Check notebook sharing RBAC enforcement",
  "test_seq": 1,
  "test_suite": "OQ-108",
  "test_suite_title": "Collaboration Features",
  "category": "OQ",
  "api_calls": [
    {
      "step": 1,
      "name": "check_notebook_permissions",
      "method": "GET",
      "api_url": "${workspace_url}/api/2.0/permissions/notebooks/${oq_108_1_notebook_id}",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "post_processing": "function processStep(responseData, currentVariables) { const accessControlList = responseData?.access_control_list || []; let hasRbac = false; let userPermissions = []; let groupPermissions = []; for (let i = 0; i < accessControlList.length; i++) { const aclEntry = accessControlList[i]; const allPermissions = aclEntry.all_permissions || []; for (let j = 0; j < allPermissions.length; j++) { const permission = allPermissions[j]; const permissionLevel = permission.permission_level; if (permissionLevel === 'CAN_READ' || permissionLevel === 'CAN_MANAGE' || permissionLevel === 'CAN_EDIT') { hasRbac = true; if (aclEntry.user_name) { userPermissions.push(aclEntry.user_name + ':' + permissionLevel); } else if (aclEntry.group_name) { groupPermissions.push(aclEntry.group_name + ':' + permissionLevel); } } } } return { ...currentVariables, has_rbac: hasRbac, user_permissions: userPermissions, group_permissions: groupPermissions, access_control_list: accessControlList, response_status: 200 }; }"
    }
  ],
  "response_schema": null,
  "parser_code": "function aggregateResults(stepResults) { const notebookStep = stepResults.check_notebook_permissions; const expected_result = 'RBAC enforced'; let actual_result = 'RBAC not properly configured'; let status = 'fail'; let code = 'RBAC_MISSING_PERMISSIONS'; let message = 'RBAC not properly configured'; if (notebookStep.error) { return { status: 'fail', message: 'Failed to check notebook permissions', code: 'RBAC_API_ERROR', test_id: 'OQ-108-1', title: 'Notebook Sharing RBAC Validation', expected_result, actual_result }; } const hasRbac = variables.has_rbac || false; const userPermissions = variables.user_permissions || []; const groupPermissions = variables.group_permissions || []; if (hasRbac) { status = 'pass'; message = 'RBAC enforcement verified'; code = 'PERMISSIONS_CORRECT'; actual_result = `RBAC enforcement verified. Users: ${userPermissions.join(', ')}. Groups: ${groupPermissions.join(', ')}`; } else { status = 'fail'; message = 'RBAC not enforced'; code = 'PERMISSIONS_NOT_ENFORCED'; actual_result = 'RBAC not enforced'; } return { status: status, message: message, code: code, test_id: 'OQ-108-1', title: 'Notebook Sharing RBAC Validation', expected_result, actual_result }; }"
} 