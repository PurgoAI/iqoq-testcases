{
  "title": "Authorization Access (Direct) - Positive",
  "test_description": "Authorization Access (Direct) - Positive: Grant SELECT permission directly to user2 and verify user2 can SELECT from the table.",
  "version": "1.0",
  "test_code": "OQ-105-8",
  "test_seq": 8,
  "test_suite": "OQ-105",
  "test_suite_title": "Data Governance",
  "category": "OQ",
  "api_calls": [
    {
      "step": 1,
      "name": "get_current_user",
      "method": "GET",
      "api_url": "${workspace_url}/api/2.0/preview/scim/v2/Me",
      "headers": {
        "Authorization": "Bearer ${token2}",
        "Content-Type": "application/json"
      },
      "payload": {},
      "post_processing": "function processStep(responseData, currentVariables) { const userEmail = responseData.userName || responseData.emails?.[0]?.value || 'test-user@purgo.ai'; return { ...currentVariables, target_user_email: userEmail }; }"
    },
    {
      "step": 2,
      "name": "grant_catalog_to_user",
      "method": "POST",
      "api_url": "${workspace_url}/api/2.0/sql/statements",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "payload": {
        "statement": "GRANT USE CATALOG ON CATALOG ${catalog_name} TO `${target_user_email}`",
        "warehouse_id": "${warehouse_id}",
        "wait_timeout": "30s"
      },
      "post_processing": "function processStep(responseData, currentVariables) { return currentVariables; }"
    },
    {
      "step": 3,
      "name": "grant_schema_to_user",
      "method": "POST",
      "api_url": "${workspace_url}/api/2.0/sql/statements",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "payload": {
        "statement": "GRANT USE SCHEMA ON SCHEMA ${catalog_name}.gold TO `${target_user_email}`",
        "warehouse_id": "${warehouse_id}",
        "wait_timeout": "30s"
      },
      "post_processing": "function processStep(responseData, currentVariables) { return currentVariables; }"
    },
    {
      "step": 4,
      "name": "grant_select_to_user",
      "method": "POST",
      "api_url": "${workspace_url}/api/2.0/sql/statements",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "payload": {
        "statement": "GRANT SELECT ON TABLE ${catalog_name}.gold.patient_summary TO `${target_user_email}`",
        "warehouse_id": "${warehouse_id}",
        "wait_timeout": "30s"
      },
      "post_processing": "function processStep(responseData, currentVariables) { return currentVariables; }"
    },
    {
      "step": 5,
      "name": "test_select_access",
      "method": "POST",
      "api_url": "${workspace_url}/api/2.0/sql/statements",
      "headers": {
        "Authorization": "Bearer ${token2}",
        "Content-Type": "application/json"
      },
      "payload": {
        "statement": "SELECT * FROM ${catalog_name}.gold.patient_summary LIMIT 5",
        "warehouse_id": "${warehouse_id}",
        "wait_timeout": "30s"
      },
      "post_processing": "function processStep(responseData, currentVariables) { return currentVariables; }"
    }
  ],
  "response_schema": null,
  "parser_code": "function aggregateResults(stepResults) { const userStep = stepResults.get_current_user; const catalogStep = stepResults.grant_catalog_to_user; const schemaStep = stepResults.grant_schema_to_user; const grantStep = stepResults.grant_select_to_user; const accessStep = stepResults.test_select_access; const expected_result = 'Result: Query Succeeded'; let actual_result = ''; if (!userStep || !userStep.data) { actual_result = 'Failed to get current user information.'; return { status: 'fail', message: actual_result, code: 'GET_USER_FAILED', test_id: 'OQ-105-8', title: 'Authorization Access (Direct) - Positive', expected_result, actual_result }; } if (!catalogStep || !catalogStep.data || catalogStep.data.status.state !== 'SUCCEEDED') { let errorMsg = 'Unknown error'; if (catalogStep && catalogStep.data && catalogStep.data.status && catalogStep.data.status.error) { errorMsg = catalogStep.data.status.error.message || catalogStep.data.status.error; } actual_result = 'Failed to grant USE CATALOG permission to user: ' + errorMsg; return { status: 'fail', message: actual_result, code: 'GRANT_CATALOG_USER_FAILED', test_id: 'OQ-105-8', title: 'Authorization Access (Direct) - Positive', expected_result, actual_result }; } if (!schemaStep || !schemaStep.data || schemaStep.data.status.state !== 'SUCCEEDED') { let errorMsg = 'Unknown error'; if (schemaStep && schemaStep.data && schemaStep.data.status && schemaStep.data.status.error) { errorMsg = schemaStep.data.status.error.message || schemaStep.data.status.error; } actual_result = 'Failed to grant USE SCHEMA permission to user: ' + errorMsg; return { status: 'fail', message: actual_result, code: 'GRANT_SCHEMA_USER_FAILED', test_id: 'OQ-105-8', title: 'Authorization Access (Direct) - Positive', expected_result, actual_result }; } if (!grantStep || !grantStep.data || grantStep.data.status.state !== 'SUCCEEDED') { let errorMsg = 'Unknown error'; if (grantStep && grantStep.data && grantStep.data.status && grantStep.data.status.error) { errorMsg = grantStep.data.status.error.message || grantStep.data.status.error; } actual_result = 'Failed to grant SELECT permission to user: ' + errorMsg; return { status: 'fail', message: actual_result, code: 'GRANT_SELECT_USER_FAILED', test_id: 'OQ-105-8', title: 'Authorization Access (Direct) - Positive', expected_result, actual_result }; } if (!accessStep || !accessStep.data || accessStep.data.status.state !== 'SUCCEEDED') { actual_result = 'Query did not succeed for test user.'; return { status: 'fail', message: 'Authorization validation failed: User cannot select from ' + variables.catalog_name + '.gold.patient_summary after direct grant', code: 'AUTH_ACCESS_DIRECT_POSITIVE_FAILED', test_id: 'OQ-105-8', title: 'Authorization Access (Direct) - Positive', expected_result, actual_result }; } actual_result = 'Query succeeded for test user.'; return { status: 'pass', message: 'Authorization validation passed: User can select from ' + variables.catalog_name + '.gold.patient_summary after direct grant', code: 'AUTH_ACCESS_DIRECT_POSITIVE_PASSED', test_id: 'OQ-105-8', title: 'Authorization Access (Direct) - Positive', expected_result, actual_result }; }",
  "manual_procedure": "Grant USE CATALOG, USE SCHEMA, and SELECT permissions to the user directly for <catalog name>.<schema name>.<table name2>. While logged into the user account, In SQL Editor write a select query for <catalog name>.<schema name>.<table name2> and run"
} 