{
  "title": "Access Control Validation",
  "test_description": "Validate access control by attempting to add a file without Git PAT.",
  "version": "2.4",
  "test_code": "IQ-108-2",
  "test_seq": 2,
  "test_suite": "IQ-108",
  "test_suite_title": "Git Connection Validation",
  "test_type": "Workspace",
  "category": "IQ",
  "api_calls": [
    {
      "step": 1,
      "name": "get_current_user",
      "method": "GET",
      "api_url": "${workspace_url}/api/2.0/preview/scim/v2/Me",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "payload": {},
      "post_processing": "function processStep(responseData, currentVariables) { const userName = responseData.userName || 'validation-user'; const currentTimestamp = Date.now(); const gitRepoOwner = currentVariables.repo_url ? currentVariables.repo_url.split('/').slice(-2)[0] : null; const gitRepoName = currentVariables.repo_url ? currentVariables.repo_url.split('/').slice(-1)[0] : null; return { ...currentVariables, user_name: userName, current_timestamp: currentTimestamp, git_repo_owner: gitRepoOwner, git_repo_name: gitRepoName }; }"
    },
    {
      "step": 2,
      "name": "attempt_file_upload_without_pat",
      "method": "PUT",
      "api_url": "https://api.github.com/repos/${git_repo_owner}/${git_repo_name}/contents/test-access-control-${current_timestamp}.txt",
      "headers": {
        "Accept": "application/vnd.github+json",
        "X-GitHub-Api-Version": "2022-11-28",
        "Content-Type": "application/json"
      },
      "payload": {
        "message": "Test file for access control validation - ${current_timestamp}",
        "content": "VGhpcyBpcyBhIHRlc3QgZmlsZSBmb3IgYWNjZXNzIGNvbnRyb2wgdmFsaWRhdGlvbi4gQ3JlYXRlZCBhdDogJHtjdXJyZW50X3RpbWVzdGFtcH0=",
        "branch": "main"
      },
      "post_processing": "function processStep(responseData, currentVariables, response) { const statusCode = response && response.status ? response.status : 200; const responseText = responseData?.message || ''; const isBlocked = statusCode === 401 || statusCode === 403 || statusCode === 404 || statusCode === 422 || responseText.toLowerCase().includes('unauthorized') || responseText.toLowerCase().includes('bad credentials') || responseText.toLowerCase().includes('authentication') || responseText.toLowerCase().includes('token') || responseText.toLowerCase().includes('forbidden') || responseText.toLowerCase().includes('not found'); const uploadSuccessful = statusCode === 201; return { ...currentVariables, operation_blocked: isBlocked, upload_successful: uploadSuccessful, error_code: statusCode, error_message: responseText }; }"
    }
  ],
  "response_schema": null,
  "parser_code": "function aggregateResults(stepResults) { const userStep = stepResults.get_current_user; const uploadStep = stepResults.attempt_file_upload_without_pat; const expected_result = 'Access control properly blocks file upload without Git PAT'; let actual_result = 'Access control validation not completed'; if (!userStep || !userStep.data || !userStep.data.userName) { actual_result = 'Failed to get user information.'; return { status: 'fail', message: actual_result, code: 'GET_USER_FAILED', test_id: 'IQ-108-2', title: 'Access Control Validation', expected_result, actual_result }; } if (!uploadStep || !uploadStep.data) { actual_result = 'No response from file upload attempt.'; return { status: 'fail', message: actual_result, code: 'NO_RESPONSE', test_id: 'IQ-108-2', title: 'Access Control Validation', expected_result, actual_result }; } if (variables.operation_blocked) { actual_result = 'Access control properly blocked file upload without Git PAT'; return { status: 'pass', message: 'Access control validation passed: File upload was blocked without Git PAT', code: 'ACCESS_CONTROL_PASSED', test_id: 'IQ-108-2', title: 'Access Control Validation', expected_result, actual_result }; } else if (variables.upload_successful) { actual_result = 'File upload succeeded without Git PAT (unexpected)'; return { status: 'fail', message: 'Access control validation failed: File upload succeeded without Git PAT', code: 'ACCESS_CONTROL_FAILED', test_id: 'IQ-108-2', title: 'Access Control Validation', expected_result, actual_result }; } else { actual_result = 'File upload failed for unexpected reason: ' + (variables.error_message || 'Unknown error'); return { status: 'fail', message: 'Access control validation failed: ' + actual_result, code: 'ACCESS_CONTROL_UNEXPECTED_ERROR', test_id: 'IQ-108-2', title: 'Access Control Validation', expected_result, actual_result }; } }",
  "manual_procedure": "Get current user, extract GitHub repo details, and attempt to upload a file without Git PAT to validate access control."
} 