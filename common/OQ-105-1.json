{
  "title": "Authorization Listing - Negative",
  "test_description": "Authorization Listing - Negative: Test that user2 cannot access table without permissions. Access should fail with permission error.",
  "version": "1.0",
  "test_code": "OQ-105-1",
  "test_seq": 1,
  "test_suite": "OQ-105",
  "test_suite_title": "Data Governance",
  "category": "OQ",
  "api_calls": [
    {
      "step": 1,
      "name": "test_unauthorized_access",
      "method": "POST",
      "api_url": "${workspace_url}/api/2.0/sql/statements",
      "headers": {
        "Authorization": "Bearer ${token2}",
        "Content-Type": "application/json"
      },
      "payload": {
        "statement": "SELECT * FROM ${catalog_name}.silver.sdtm_dm LIMIT 5",
        "warehouse_id": "${warehouse_id}",
        "wait_timeout": "30s"
      },
      "post_processing": "function processStep(responseData, currentVariables) { return currentVariables; }"
    }
  ],
  "response_schema": null,
  "parser_code": "function aggregateResults(stepResults) { const accessStep = stepResults.test_unauthorized_access; const expected_result = 'Result: Browse fails.'; if (!accessStep || !accessStep.data) { return { status: 'fail', message: 'No response received from authorization test', code: 'AUTH_NEGATIVE_NO_RESPONSE', test_id: 'OQ-105-1', title: 'Authorization Listing - Negative', expected_result, actual_result: 'No response from authorization test.' }; } const data = accessStep.data; if (data.status && data.status.state === 'FAILED') { const errorMsg = data.status.error ? data.status.error.message : ''; if (errorMsg && (errorMsg.indexOf('permission') !== -1 || errorMsg.indexOf('Permission') !== -1 || errorMsg.indexOf('PERMISSION') !== -1 || errorMsg.indexOf('access') !== -1 || errorMsg.indexOf('Access') !== -1 || errorMsg.indexOf('ACCESS') !== -1 || errorMsg.indexOf('denied') !== -1 || errorMsg.indexOf('Denied') !== -1 || errorMsg.indexOf('DENIED') !== -1 || errorMsg.indexOf('Forbidden') !== -1 || errorMsg.indexOf('FORBIDDEN') !== -1 || errorMsg.indexOf('forbidden') !== -1)) { return { status: 'pass', message: 'Authorization validation passed: User2 access properly denied to ' + variables.catalog_name + '.silver.sdtm_dm', code: 'AUTH_NEGATIVE_PASSED', test_id: 'OQ-105-1', title: 'Authorization Listing - Negative', expected_result, actual_result: 'Access denied: ' + errorMsg }; } else { return { status: 'fail', message: 'Query failed but not due to permission error: ' + errorMsg, code: 'AUTH_NEGATIVE_UNEXPECTED_ERROR', test_id: 'OQ-105-1', title: 'Authorization Listing - Negative', expected_result, actual_result: 'Query failed: ' + errorMsg }; } } else if (data.status && data.status.state === 'SUCCEEDED') { return { status: 'fail', message: 'Authorization validation failed: User2 access was not denied to ' + variables.catalog_name + '.silver.sdtm_dm', code: 'AUTH_NEGATIVE_FAILED', test_id: 'OQ-105-1', title: 'Authorization Listing - Negative', expected_result, actual_result: 'Access granted (should have failed).' }; } else { return { status: 'fail', message: 'Failed to execute authorization test query', code: 'AUTH_NEGATIVE_ERROR', test_id: 'OQ-105-1', title: 'Authorization Listing - Negative', expected_result, actual_result: 'Failed to execute authorization test query.' }; } }",
  "manual_procedure": "While logged in with an unauthorized user, navigate to the Catalog explorer and attempt to browse for <catalog name>, <schema name>, and <table name>."
} 