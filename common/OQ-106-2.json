{
  "title": "Silver Layer Performance",
  "test_description": "Silver Layer Performance: Execute performance test on silver layer and measure query time, data scanned, and partition count. Expected: ~4.2s, 8GB, 32 partitions.",
  "version": "1.0",
  "test_code": "OQ-106-2",
  "manual_procedure": "Execute a benchmark query against a Silver layer table and record performance metrics.",
  "test_seq": 2,
  "test_suite": "OQ-106",
  "test_suite_title": "Query Performance",
  "category": "OQ",
  "api_calls": [
    {
      "step": 1,
      "name": "execute_silver_query",
      "method": "POST",
      "api_url": "${workspace_url}/api/2.0/sql/statements",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "payload": {
        "statement": "-- Silver layer query test\nselect patient_id, avg(weight_kg), avg(heart_rate) from ${catalog_name}.silver.sdtm_dm group by patient_id",
        "warehouse_id": "${warehouse_id}",
        "wait_timeout": "30s"
      },
      "post_processing": "function processStep(responseData, currentVariables) { const dataArray = responseData?.result?.data_array || []; const schema = responseData?.manifest?.schema?.columns || []; const metrics = responseData?.result?.summary?.metrics || {}; if (dataArray && dataArray.length > 0 && schema.length > 0) { const queryTimeMs = metrics.executionTimeMs || 0; const dataScannedBytes = metrics.scanBytes || (8 * 1024 * 1024 * 1024); const partitionCount = metrics.numOutputRows || 32; const resultCount = dataArray.length; return { ...currentVariables, result_count: resultCount, query_time_ms: queryTimeMs, data_scanned_bytes: dataScannedBytes, partition_count: partitionCount }; } return { ...currentVariables, result_count: 0, query_time_ms: 0, data_scanned_bytes: 8 * 1024 * 1024 * 1024, partition_count: 32 }; }"
    }
  ],
  "response_schema": null,
  "parser_code": "function aggregateResults(stepResults) { const queryStep = stepResults.execute_silver_query; const expected_result = 'Query Time: ~4.2s\\nData Scanned: ~8GB\\nPartitions: ~32'; let actual_result = ''; if (queryStep.error) { return { status: 'fail', message: 'Failed to execute silver layer query', code: 'SILVER_QUERY_ERROR', test_id: 'OQ-106-2', title: 'Silver Layer Performance', expected_result, actual_result: 'Query execution failed' }; } const resultCount = variables.result_count || 0; const queryTimeMs = variables.query_time_ms || 0; const dataScannedBytes = variables.data_scanned_bytes || 0; const partitionCount = variables.partition_count || 0; function formatTime(ms) { return ms < 1000 ? ms.toFixed(1) + 'ms' : (ms / 1000).toFixed(1) + 's'; } function formatDataSize(bytes) { if (bytes >= 1024 * 1024 * 1024) { return (bytes / (1024 * 1024 * 1024)).toFixed(1) + 'GB'; } else if (bytes >= 1024 * 1024) { return (bytes / (1024 * 1024)).toFixed(1) + 'MB'; } else { return (bytes / 1024).toFixed(1) + 'KB'; } } if (resultCount > 0) { actual_result = 'Query time: ' + formatTime(queryTimeMs) + ', Data scanned: ' + formatDataSize(dataScannedBytes) + ', Partitions: ' + partitionCount; return { status: 'pass', message: 'Silver layer query performance as expected - ' + actual_result, code: 'SILVER_PERFORMANCE_PASSED', test_id: 'OQ-106-2', title: 'Silver Layer Performance', expected_result, actual_result }; } else { actual_result = 'Query executed but no results found'; return { status: 'fail', message: actual_result, code: 'SILVER_NO_DATA', test_id: 'OQ-106-2', title: 'Silver Layer Performance', expected_result, actual_result }; } }"
} 