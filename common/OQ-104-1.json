{
  "title": "Completeness",
  "test_description": "Data Validation - Completeness check for patient_id field. Validates ≥99.5% completeness requirement.",
  "version": "1.0",
  "test_code": "OQ-104-1",
  "test_seq": 1,
  "test_suite": "OQ-104",
  "test_suite_title": "Data Validation",
  "category": "OQ",
  "api_calls": [
    {
      "step": 1,
      "name": "check_table_exists",
      "method": "POST",
      "api_url": "${workspace_url}/api/2.0/sql/statements",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "payload": {
        "statement": "SHOW TABLES IN iq_oq_demo.silver LIKE 'sdtm_dm'",
        "warehouse_id": "${warehouse_id}",
        "wait_timeout": "30s"
      },
      "post_processing": "function processStep(responseData, currentVariables) { const dataArray = responseData.result ? responseData.result.data_array : []; const tableExists = dataArray && dataArray.length > 0; return { ...currentVariables, table_exists: tableExists }; }"
    },
    {
      "step": 2,
      "name": "validate_completeness",
      "condition": "table_exists",
      "method": "POST",
      "api_url": "${workspace_url}/api/2.0/sql/statements",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "payload": {
        "statement": "SELECT COUNT(*) as total_records, SUM(CASE WHEN patient_id IS NOT NULL THEN 1 ELSE 0 END) as valid_records, (SUM(CASE WHEN patient_id IS NOT NULL THEN 1 ELSE 0 END) / COUNT(*)) * 100 as completeness_percentage FROM iq_oq_demo.silver.sdtm_dm",
        "warehouse_id": "${warehouse_id}",
        "wait_timeout": "30s"
      },
      "post_processing": "function processStep(responseData, currentVariables) { return currentVariables; }"
    }
  ],
  "response_schema": null,
  "parser_code": "function aggregateResults(stepResults) { const tableStep = stepResults.check_table_exists; const completenessStep = stepResults.validate_completeness; if (!tableStep || !tableStep.data) { return { status: 'fail', message: 'Failed to check table existence', code: 'COMPLETENESS_TABLE_CHECK_FAILED', test_id: 'OQ-104-1', title: 'Completeness' }; } const tableData = tableStep.data; if (tableData.status && tableData.status.state === 'SUCCEEDED') { const tableArray = tableData.result ? tableData.result.data_array : []; if (!tableArray || tableArray.length === 0) { return { status: 'fail', message: 'Table iq_oq_demo.silver.sdtm_dm does not exist.', code: 'COMPLETENESS_TABLE_NOT_FOUND', test_id: 'OQ-104-1', title: 'Completeness' }; } } if (!completenessStep || !completenessStep.data) { return { status: 'fail', message: 'Failed to execute completeness query', code: 'COMPLETENESS_QUERY_FAILED', test_id: 'OQ-104-1', title: 'Completeness' }; } const data = completenessStep.data; if (data.status && data.status.state === 'SUCCEEDED' && data.result && data.result.data_array && data.result.data_array.length > 0) { const dataArray = data.result.data_array; const row = dataArray[0]; const totalRecords = parseInt(row[0]) || 0; const validRecords = parseInt(row[1]) || 0; const completenessPercentage = parseFloat(row[2]) || 0; if (totalRecords === 0) { return { status: 'fail', message: 'No records found in the table', code: 'COMPLETENESS_NO_RECORDS', test_id: 'OQ-104-1', title: 'Completeness' }; } if (completenessPercentage >= 99.5) { return { status: 'pass', message: 'Completeness: ' + completenessPercentage.toFixed(2) + '% (≥99.5% required)', code: 'COMPLETENESS_PASSED', test_id: 'OQ-104-1', title: 'Completeness' }; } else { return { status: 'fail', message: 'Completeness: ' + completenessPercentage.toFixed(2) + '% (below 99.5% threshold)', code: 'COMPLETENESS_FAILED', test_id: 'OQ-104-1', title: 'Completeness' }; } } else { return { status: 'fail', message: 'Failed to execute completeness validation query', code: 'COMPLETENESS_QUERY_ERROR', test_id: 'OQ-104-1', title: 'Completeness' }; } }"
} 