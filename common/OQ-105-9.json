{
  "title": "Authorization Access (Direct) - Revoke",
  "test_description": "Authorization Access (Direct) - Revoke: Revoke SELECT permission directly from user2, verify user2 can no longer SELECT from the table, and clean up by deleting the temporary group.",
  "version": "1.0",
  "test_code": "OQ-105-9",
  "test_seq": 9,
  "test_suite": "OQ-105",
  "test_suite_title": "Data Governance",
  "category": "OQ",
  "api_calls": [
    {
      "step": 1,
      "name": "get_current_user",
      "method": "GET",
      "api_url": "${workspace_url}/api/2.0/preview/scim/v2/Me",
      "headers": {
        "Authorization": "Bearer ${token2}",
        "Content-Type": "application/json"
      },
      "payload": {},
      "post_processing": "function processStep(responseData, currentVariables) { const userEmail = responseData.userName || responseData.emails?.[0]?.value || 'test-user@purgo.ai'; return { ...currentVariables, target_user_email: userEmail }; }"
    },
    {
      "step": 2,
      "name": "revoke_select_from_user",
      "method": "POST",
      "api_url": "${workspace_url}/api/2.0/sql/statements",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "payload": {
        "statement": "REVOKE SELECT ON TABLE ${catalog_name}.gold.patient_summary FROM `${target_user_email}`",
        "warehouse_id": "${warehouse_id}",
        "wait_timeout": "30s"
      },
      "post_processing": "function processStep(responseData, currentVariables) { return currentVariables; }"
    },
    {
      "step": 3,
      "name": "test_select_access",
      "method": "POST",
      "api_url": "${workspace_url}/api/2.0/sql/statements",
      "headers": {
        "Authorization": "Bearer ${token2}",
        "Content-Type": "application/json"
      },
      "payload": {
        "statement": "SELECT * FROM ${catalog_name}.gold.patient_summary LIMIT 5",
        "warehouse_id": "${warehouse_id}",
        "wait_timeout": "30s"
      },
      "post_processing": "function processStep(responseData, currentVariables) { return currentVariables; }"
    },
    {
      "step": 4,
      "name": "get_group_id",
      "method": "GET",
      "api_url": "${workspace_url}/api/2.0/account/scim/v2/Groups",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "payload": {
        "filter": "displayName eq \"TEMP_GROUP_OQ104\""
      },
      "post_processing": "function processStep(responseData, currentVariables) { const groupId = responseData.Resources?.[0]?.id; return { ...currentVariables, group_id: groupId }; }"
    },
    {
      "step": 5,
      "name": "delete_group",
      "method": "DELETE",
      "api_url": "${workspace_url}/api/2.0/account/scim/v2/Groups/${group_id}",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "payload": {},
      "post_processing": "function processStep(responseData, currentVariables) { return currentVariables; }"
    }
  ],
  "response_schema": null,
  "parser_code": "function aggregateResults(stepResults) { const revokeStep = stepResults.revoke_select_from_user; const accessStep = stepResults.test_select_access; const groupStep = stepResults.get_group_id; const deleteStep = stepResults.delete_group; const expected_result = 'Result: Query Failed and Group Deleted'; let actual_result = ''; if (!revokeStep || !revokeStep.data || revokeStep.data.status.state !== 'SUCCEEDED') { let errorMsg = 'Unknown error'; if (revokeStep && revokeStep.data && revokeStep.data.status && revokeStep.data.status.error) { errorMsg = revokeStep.data.status.error.message || revokeStep.data.status.error; } actual_result = 'Failed to revoke SELECT permission from user: ' + errorMsg; return { status: 'fail', message: actual_result, code: 'REVOKE_SELECT_USER_FAILED', test_id: 'OQ-105-9', title: 'Authorization Access (Direct) - Revoke', expected_result, actual_result }; } const data = accessStep.data; let accessDenied = false; if (data && data.status && data.status.state === 'FAILED') { const errorMsg = data.status.error ? data.status.error.message : ''; if (errorMsg && (errorMsg.indexOf('permission') !== -1 || errorMsg.indexOf('Permission') !== -1 || errorMsg.indexOf('PERMISSION') !== -1 || errorMsg.indexOf('access') !== -1 || errorMsg.indexOf('Access') !== -1 || errorMsg.indexOf('ACCESS') !== -1 || errorMsg.indexOf('denied') !== -1 || errorMsg.indexOf('Denied') !== -1 || errorMsg.indexOf('DENIED') !== -1 || errorMsg.indexOf('Forbidden') !== -1 || errorMsg.indexOf('FORBIDDEN') !== -1 || errorMsg.indexOf('forbidden') !== -1)) { actual_result = 'Access denied: ' + errorMsg; accessDenied = true; } else { actual_result = 'Query failed: ' + errorMsg; } } else { actual_result = 'Query did not fail as expected.'; } if (!accessDenied) { return { status: 'fail', message: 'Authorization validation failed: User2 SELECT access was not revoked directly', code: 'AUTH_ACCESS_DIRECT_REVOKE_FAILED', test_id: 'OQ-105-9', title: 'Authorization Access (Direct) - Revoke', expected_result, actual_result }; } if (!groupStep || !groupStep.data || !groupStep.data.Resources || groupStep.data.Resources.length === 0) { actual_result += ' | Failed to find group TEMP_GROUP_OQ104'; return { status: 'fail', message: actual_result, code: 'GET_GROUP_FAILED', test_id: 'OQ-105-9', title: 'Authorization Access (Direct) - Revoke', expected_result, actual_result }; } if (!deleteStep || deleteStep.status !== 204) { actual_result += ' | Failed to delete group: Group deletion request failed'; return { status: 'fail', message: actual_result, code: 'DELETE_GROUP_FAILED', test_id: 'OQ-105-9', title: 'Authorization Access (Direct) - Revoke', expected_result, actual_result }; } actual_result += ' | Group TEMP_GROUP_OQ104 deleted successfully'; return { status: 'pass', message: 'Authorization validation passed: User2 SELECT access properly denied after direct revoke and temporary group deleted', code: 'AUTH_ACCESS_DIRECT_REVOKE_PASSED', test_id: 'OQ-105-9', title: 'Authorization Access (Direct) - Revoke', expected_result, actual_result }; }",
  "manual_procedure": "Revoke SELECT from user for <catalog name>.<schema name>.<table name2>. While logged into the user account, In SQL Editor write a select query for <catalog name>.<schema name>.<table name2> and run. Finally, delete the temporary group TEMP_GROUP_OQ104."
} 