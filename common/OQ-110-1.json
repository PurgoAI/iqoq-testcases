{
  "title": "Data Drift Monitoring Configuration",
  "test_description": "Validates data drift monitoring configuration for the demographics table to ensure proper drift detection is set up",
  "version": "1.0",
  "test_code": "OQ-110-1",
  "manual_procedure": "Check data drift monitoring configuration for demographics table",
  "test_seq": 1,
  "test_suite": "OQ-110",
  "test_suite_title": "Data Drift Monitoring",
  "category": "OQ",
  "api_calls": [
    {
      "step": 1,
      "name": "check_drift_monitoring",
      "method": "GET",
      "api_url": "${workspace_url}/api/2.1/unity-catalog/tables/${catalog_name}.bronze.demographics/monitor",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "post_processing": "function processStep(responseData, currentVariables) { const tableName = responseData?.table_name || currentVariables.catalog_name + '.bronze.demographics'; const status = responseData?.status || 'UNKNOWN'; const isActive = status === 'MONITOR_STATUS_ACTIVE'; const schedule = responseData?.schedule?.quartz_cron_expression || 'Not configured'; const profileMetricsTable = responseData?.profile_metrics_table_name || 'Not configured'; const driftMetricsTable = responseData?.drift_metrics_table_name || 'Not configured'; const dashboardId = responseData?.dashboard_id || 'Not configured'; return { ...currentVariables, table_name: tableName, monitor_status: status, is_active: isActive, schedule: schedule, profile_metrics_table: profileMetricsTable, drift_metrics_table: driftMetricsTable, dashboard_id: dashboardId }; }"
    }
  ],
  "response_schema": null,
  "parser_code": "function aggregateResults(stepResults) { const driftStep = stepResults.check_drift_monitoring; const expected_result = 'Data drift monitoring is active and properly configured'; let actual_result = 'Data drift monitoring validation failed'; let status = 'fail'; let code = 'MONITORING_FAILED'; let message = 'Data drift monitoring validation failed'; if (driftStep.error) { if (driftStep.response_status === 404) { status = 'fail'; message = 'Data drift monitoring is not configured for table ' + variables.catalog_name + '.bronze.demographics'; code = 'MONITORING_NOT_CONFIGURED'; actual_result = 'Data drift monitoring is not configured for demographics table'; } else { status = 'error'; message = `Failed to check data drift monitoring: HTTP ${driftStep.response_status || 'Unknown'}`; code = `HTTP_${driftStep.response_status || 'UNKNOWN'}`; actual_result = `API call failed with status code ${driftStep.response_status || 'Unknown'}`; } } else { const isActive = variables.is_active || false; const monitorStatus = variables.monitor_status || 'UNKNOWN'; const tableName = variables.table_name || variables.catalog_name + '.bronze.demographics'; const schedule = variables.schedule || 'Not configured'; const profileMetricsTable = variables.profile_metrics_table || 'Not configured'; const driftMetricsTable = variables.drift_metrics_table || 'Not configured'; const dashboardId = variables.dashboard_id || 'Not configured'; if (isActive) { status = 'pass'; message = 'Data drift monitoring is active and properly configured'; code = 'MONITORING_ACTIVE'; actual_result = `Data drift monitoring active for ${tableName}. Schedule: ${schedule}. Metrics tables: ${profileMetricsTable}, ${driftMetricsTable}. Dashboard: ${dashboardId}`; } else { status = 'fail'; message = `Data drift monitoring is not active. Current status: ${monitorStatus}`; code = 'MONITORING_INACTIVE'; actual_result = `Data drift monitoring not active. Status: ${monitorStatus}. Expected: MONITOR_STATUS_ACTIVE`; } } return { status: status, message: message, code: code, test_id: 'OQ-110-1', title: 'Data Drift Monitoring Configuration', expected_result, actual_result }; }"
} 