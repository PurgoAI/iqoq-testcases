{
  "title": "Auto-scaling",
  "test_description": "Validate that the Databricks cluster has the required auto-scaling configuration based on autoscaling settings",
  "version": "1.0",
  "test_code": "IQ-104-3",
  "test_seq": 3,
  "test_suite": "IQ-104",
  "test_suite_title": "Cluster Configuration",
  "test_type": "Workspace",
  "category": "IQ",
  "api_calls": [
    {
      "step": 1,
      "name": "get_cluster_autoscale",
      "method": "GET",
      "api_url": "${workspace_url}/api/2.0/clusters/get",
      "headers": {
        "Authorization": "Bearer ${token}"
      },
      "payload": {
        "cluster_id": "${cluster_id}"
      },
      "post_processing": "function processStep(responseData, currentVariables) { const clusterData = responseData || {}; const autoscale = clusterData.autoscale || null; const hasAutoscale = autoscale !== null; const minWorkers = hasAutoscale ? (autoscale.min_workers || 0) : 0; const maxWorkers = hasAutoscale ? (autoscale.max_workers || 0) : 0; const numWorkers = clusterData.num_workers || 0; return { ...currentVariables, has_autoscale: hasAutoscale, actual_min_workers: minWorkers, actual_max_workers: maxWorkers, actual_num_workers: numWorkers }; }"
    }
  ],
  "response_schema": null,
  "parser_code": "function aggregateResults(stepResults) { const clusterStep = stepResults.get_cluster_autoscale; const autoscalingEnabled = variables.iq_104_2_autoscaling_enabled || false; const requiredMinWorkers = variables.iq_104_2_min_workers || 8; const requiredMaxWorkers = variables.iq_104_2_max_workers || 32; const requiredWorkerCount = variables.iq_104_1_worker_count || 8; let expected_result = ''; let actual_result = 'Auto-scaling: Not found'; if (clusterStep.error) { return { status: 'fail', message: 'No response received from API', code: 'NO_RESPONSE', test_id: 'IQ-104-3', title: 'Auto-scaling', expected_result, actual_result }; } const hasAutoscale = variables.has_autoscale || false; const actualMinWorkers = variables.actual_min_workers || 0; const actualMaxWorkers = variables.actual_max_workers || 0; const actualNumWorkers = variables.actual_num_workers || 0; if (autoscalingEnabled) { expected_result = `Auto-scaling: Enabled, ${requiredMinWorkers}-${requiredMaxWorkers} nodes`; if (!hasAutoscale) { actual_result = `Auto-scaling: Expected but not configured. Fixed workers: ${actualNumWorkers}`; return { status: 'fail', message: 'Auto-scaling is expected but not configured on the cluster', code: 'AUTOSCALING_NOT_CONFIGURED', test_id: 'IQ-104-3', title: 'Auto-scaling', expected_result, actual_result }; } const minWorkersMatch = actualMinWorkers === requiredMinWorkers; const maxWorkersMatch = actualMaxWorkers === requiredMaxWorkers; actual_result = `Auto-scaling: Enabled, ${actualMinWorkers}-${actualMaxWorkers} nodes`; if (minWorkersMatch && maxWorkersMatch) { return { status: 'pass', message: 'Cluster has the required auto-scaling configuration', code: 'CORRECT_AUTO_SCALING', test_id: 'IQ-104-3', title: 'Auto-scaling', expected_result, actual_result }; } else { return { status: 'fail', message: `Cluster auto-scaling configuration does not meet requirements: Min workers is ${actualMinWorkers} instead of ${requiredMinWorkers}; Max workers is ${actualMaxWorkers} instead of ${requiredMaxWorkers}`, code: 'INCORRECT_AUTO_SCALING', test_id: 'IQ-104-3', title: 'Auto-scaling', expected_result, actual_result }; } } else { expected_result = `Auto-scaling: Disabled, fixed ${requiredWorkerCount} nodes`; if (hasAutoscale) { actual_result = `Auto-scaling: Configured but not expected. Auto-scaling ${actualMinWorkers}-${actualMaxWorkers} nodes`; return { status: 'fail', message: 'Auto-scaling is configured but not expected for this test', code: 'UNEXPECTED_AUTOSCALING', test_id: 'IQ-104-3', title: 'Auto-scaling', expected_result, actual_result }; } const workerCountMatches = actualNumWorkers === requiredWorkerCount; actual_result = `Auto-scaling: Disabled, fixed ${actualNumWorkers} nodes`; if (workerCountMatches) { return { status: 'pass', message: 'Cluster has the correct fixed worker configuration (auto-scaling disabled)', code: 'CORRECT_FIXED_CONFIGURATION', test_id: 'IQ-104-3', title: 'Auto-scaling', expected_result, actual_result }; } else { return { status: 'fail', message: `Cluster worker count does not meet requirements: ${actualNumWorkers} instead of ${requiredWorkerCount}`, code: 'INCORRECT_WORKER_COUNT', test_id: 'IQ-104-3', title: 'Auto-scaling', expected_result, actual_result }; } } }",
  "manual_procedure": "databricks clusters get --cluster-id <id> | jq '.autoscale, .num_workers'"
}