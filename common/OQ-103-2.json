{
  "title": "Blood Pressure and Heart Rate Validation",
  "test_description": "Blood Pressure and Heart Rate Validation - Validates systolic BP (90-180 mmHg), diastolic BP (60-120 mmHg), and heart rate (< 0.1% null values allowed).",
  "version": "1.0",
  "test_code": "OQ-103-2",
  "manual_procedure": "Check vital signs data quality",
  "test_seq": 2,
  "test_suite": "OQ-103",
  "test_suite_title": "Audit Trail",
  "category": "OQ",
  "api_calls": [
    {
      "step": 1,
      "name": "validate_blood_pressure_heart_rate",
      "method": "POST",
      "api_url": "${workspace_url}/api/2.0/sql/statements",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "payload": {
        "statement": "SELECT COUNT(*) as total_records FROM iq_oq_demo.silver.sdtm_dm WHERE systolic_bp IS NOT NULL OR diastolic_bp IS NOT NULL OR heart_rate IS NOT NULL LIMIT 1",
        "warehouse_id": "${warehouse_id}",
        "wait_timeout": "30s"
      },
      "post_processing": "function processStep(responseData, currentVariables) { const dataArray = responseData?.result?.data_array || []; const schema = responseData?.manifest?.schema?.columns || []; if (dataArray && dataArray.length > 0 && schema.length > 0) { const row = dataArray[0]; const totalRecords = row[schema.findIndex(col => col.name === 'total_records')] || 0; return { ...currentVariables, total_records: totalRecords }; } return { ...currentVariables, total_records: 0 }; }"
    }
  ],
  "response_schema": null,
  "parser_code": "function aggregateResults(stepResults) { const bpStep = stepResults.validate_blood_pressure_heart_rate; const expected_result = 'Vital signs data found'; let actual_result = 'No vital signs data found'; if (bpStep.error) { return { status: 'fail', message: 'Failed to execute vital signs validation query', code: 'VITAL_SIGNS_QUERY_ERROR', test_id: 'OQ-103-2', title: 'Blood Pressure and Heart Rate Validation', expected_result, actual_result }; } const totalRecords = variables.total_records || 0; if (totalRecords > 0) { actual_result = `Found ${totalRecords} records with vital signs data`; return { status: 'pass', message: actual_result, code: 'VITAL_SIGNS_DATA_FOUND', test_id: 'OQ-103-2', title: 'Blood Pressure and Heart Rate Validation', expected_result, actual_result }; } else { actual_result = 'No vital signs data found in table'; return { status: 'fail', message: actual_result, code: 'VITAL_SIGNS_NO_DATA', test_id: 'OQ-103-2', title: 'Blood Pressure and Heart Rate Validation', expected_result, actual_result }; } }"
} 