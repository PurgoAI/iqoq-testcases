{
  "title": "Outbound Create Share",
  "test_description": "Validates Delta Sharing outbound share creation by creating a share, adding tables, and verifying share configuration",
  "version": "1.0",
  "test_code": "OQ-112-1",
  "manual_procedure": "While logged in, click Catalog on the left hand navigation menu and click Delta Sharing in the top center. Switch to the \"Shared by Me\" tab and click \"Share Data\" on the top right then enter Share name and description and click \"Save and Continue\"",
  "test_seq": 1,
  "test_suite": "OQ-112",
  "test_suite_title": "Delta Sharing",
  "test_suite_type": "Security",
  "category": "OQ",
  "api_calls": [
    {
      "step": 1,
      "name": "check_delta_sharing_enabled",
      "method": "POST",
      "api_url": "${workspace_url}/api/2.0/sql/statements",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "payload": {
        "statement": "SHOW RECIPIENTS",
        "warehouse_id": "${warehouse_id}",
        "wait_timeout": "30s"
      },
      "post_processing": "function processStep(responseData, currentVariables) { const status = responseData?.status?.state || 'UNKNOWN'; const success = status === 'SUCCEEDED'; const dataArray = responseData?.result?.data_array || []; const hasRecipients = dataArray && dataArray.length > 0; const error = responseData?.status?.error?.message || ''; const isDeltaSharingDisabled = error.includes('External Delta Sharing is not enabled'); return { ...currentVariables, delta_sharing_available: success, has_recipients: hasRecipients, recipient_count: dataArray.length, delta_sharing_disabled: isDeltaSharingDisabled }; }"
    },
    {
      "step": 2,
      "name": "create_share",
      "method": "POST",
      "api_url": "${workspace_url}/api/2.0/sql/statements",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "payload": {
        "statement": "CREATE SHARE test_data_share_${catalog_name} COMMENT 'Test share for validation'",
        "warehouse_id": "${warehouse_id}",
        "wait_timeout": "30s"
      },
      "post_processing": "function processStep(responseData, currentVariables) { const status = responseData?.status?.state || 'UNKNOWN'; const success = status === 'SUCCEEDED'; const statementId = responseData?.statement_id || ''; const error = responseData?.status?.error?.message || ''; const shareExists = error.includes('already exists'); return { ...currentVariables, share_created: success || shareExists, share_status: status, share_statement_id: statementId, share_already_exists: shareExists }; }"
    },
    {
      "step": 3,
      "name": "verify_share_details",
      "method": "POST",
      "api_url": "${workspace_url}/api/2.0/sql/statements",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "payload": {
        "statement": "DESCRIBE SHARE test_data_share_${catalog_name}",
        "warehouse_id": "${warehouse_id}",
        "wait_timeout": "30s"
      },
      "post_processing": "function processStep(responseData, currentVariables) { const dataArray = responseData?.result?.data_array || []; const shareExists = dataArray && dataArray.length > 0; const shareInfo = shareExists ? dataArray[0] : null; return { ...currentVariables, share_exists: shareExists, share_info: shareInfo }; }"
    },
    {
      "step": 4,
      "name": "verify_share_contents",
      "method": "POST",
      "api_url": "${workspace_url}/api/2.0/sql/statements",
      "headers": {
        "Authorization": "Bearer ${token}",
        "Content-Type": "application/json"
      },
      "payload": {
        "statement": "SHOW ALL IN SHARE test_data_share_${catalog_name}",
        "warehouse_id": "${warehouse_id}",
        "wait_timeout": "30s"
      },
      "post_processing": "function processStep(responseData, currentVariables) { const dataArray = responseData?.result?.data_array || []; const hasObjects = dataArray && dataArray.length > 0; const objectCount = hasObjects ? dataArray.length : 0; const objectNames = hasObjects ? dataArray.map(row => row[0] || 'Unknown').join(', ') : ''; return { ...currentVariables, has_objects: hasObjects, object_count: objectCount, object_names: objectNames }; }"
    }
  ],
  "response_schema": null,
  "parser_code": "function aggregateResults(stepResults) { const checkStep = stepResults.check_delta_sharing_enabled; const createStep = stepResults.create_share; const verifyStep = stepResults.verify_share_details; const contentsStep = stepResults.verify_share_contents; const expected_result = 'Succeeded'; let actual_result = 'Delta Sharing share creation failed'; const deltaSharingAvailable = variables.delta_sharing_available || false; const deltaSharingDisabled = variables.delta_sharing_disabled || false; if (!deltaSharingAvailable || deltaSharingDisabled) { actual_result = 'Delta Sharing is not enabled on this workspace. Contact account admin to enable External Delta Sharing on the metastore.'; return { status: 'fail', message: 'Delta Sharing functionality not available', code: 'DELTA_SHARING_NOT_ENABLED', test_id: 'OQ-112-1', title: 'Outbound Create Share', expected_result, actual_result }; } const shareCreated = variables.share_created || false; const shareAlreadyExists = variables.share_already_exists || false; if (!shareCreated && !shareAlreadyExists) { actual_result = `Share creation failed with status: ${variables.share_status || 'UNKNOWN'}`; return { status: 'fail', message: actual_result, code: 'SHARE_CREATION_FAILED', test_id: 'OQ-112-1', title: 'Outbound Create Share', expected_result, actual_result }; } const shareExists = variables.share_exists || false; if (shareExists || shareAlreadyExists) { actual_result = 'Succeeded'; return { status: 'pass', message: 'Delta Sharing share created successfully', code: 'SHARE_CREATION_SUCCESS', test_id: 'OQ-112-1', title: 'Outbound Create Share', expected_result, actual_result }; } else { actual_result = 'Delta Sharing share not found after creation'; return { status: 'fail', message: actual_result, code: 'SHARE_NOT_FOUND', test_id: 'OQ-112-1', title: 'Outbound Create Share', expected_result, actual_result }; } }"
} 